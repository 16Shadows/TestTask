services:
  postgres:
    container_name: testtask_postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./TestTaskBackend/sql_migrations:/docker-entrypoint-initdb.d
      - testtask-postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
  server:
    container_name: testtask_server
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: testtask_postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "443:443"
      - "80:80"
    networks:
      - postgres

volumes:
  testtask-postgres-db:

networks:
  postgres:
    driver: bridge